{"version":3,"file":"client.js","sourceRoot":"","sources":["../client.ts"],"names":[],"mappings":"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","sourcesContent":["// Solø API client\n\nexport interface TaskRequest {\n\tuserID?:   string;\n\tname?:     string;\n\tcomplete?: boolean;\n\tafter?:    string;\n}\n\nexport interface TaskResponse extends MetadataResponse {\n\tuserID?:   string;\n\tname?:     string;\n\tcomplete?: boolean;\n\tafter?:    string;\n}\n\nexport interface TokenRequest {\n\tuserID?: string;\n\ttoken?:  string;\n}\n\nexport interface TokenResponse extends MetadataResponse {\n\tuserID?: string;\n\ttoken?:  string;\n}\n\nexport interface UserRequest {\n\tname?:         string;\n\temail?:        string;\n\tpassword?:     string;\n\tserviceAdmin?: boolean;\n}\n\nexport interface UserResponse extends MetadataResponse {\n\tname?:         string;\n\temail?:        string;\n\tpassword?:     string;\n\tserviceAdmin?: boolean;\n}\n\nexport interface MetadataResponse {\n\tid:           string;\n\tetag:         string;\n\tgeneration:   number;\n}\n\nexport interface GetOpts<T extends MetadataResponse> {\n\tprev?: T;\n}\n\nexport interface ListOpts<T extends MetadataResponse> {\n\tstream?:  string;\n\tlimit?:   number;\n\toffset?:  number;\n\tafter?:   string;\n\tsorts?:   string[];\n\tfilters?: Filter[];\n\tprev?:    T[];\n}\n\nexport interface Filter {\n\tpath:   string;\n\top:     string;\n\tvalue:  string;\n}\n\nexport interface UpdateOpts<T extends MetadataResponse> {\n\tprev?: T;\n}\n\nexport interface JSONError {\n\tmessages:  string[];\n}\n\nexport interface DebugInfo {\n\tserver: ServerInfo;\n\tip:     IPInfo;\n\thttp:   HTTPInfo;\n\ttls:    TLSInfo;\n}\n\nexport interface ServerInfo {\n\thostname:  string;\n}\n\nexport interface IPInfo {\n\tremoteAddr:  string;\n}\n\nexport interface HTTPInfo {\n\tprotocol:  string;\n\tmethod:    string;\n\theader:    string;\n\turl:       string;\n}\n\nexport interface TLSInfo {\n\tversion:             number;\n\tdidResume:           boolean;\n\tcipherSuite:         number;\n\tnegotiatedProtocol:  string;\n\tserverName:          string;\n}\n\ninterface FetchOptions {\n\tparams?:  URLSearchParams;\n\theaders?: Headers;\n\tprev?:    any;\n\tbody?:    any;\n\tsignal?:  AbortSignal;\n\tstream?:  boolean;\n}\n\ninterface StreamEvent {\n\teventType: string;\n\tparams:    Map<string, string>;\n\tdata:      string;\n}\n\nconst ETagKey = Symbol('etag');\n\nclass StreamCore {\n\tprivate reader: ReadableStreamDefaultReader;\n\tprivate controller: AbortController;\n\n\tprivate buf: string = '';\n\n\tconstructor(resp: Response, controller: AbortController) {\n\t\tthis.reader = resp.body!.pipeThrough(new TextDecoderStream()).getReader();\n\t\tthis.controller = controller;\n\t}\n\n\tasync abort() {\n\t\tthis.controller.abort();\n\t}\n\n\tprotected async readEvent(): Promise<StreamEvent | null> {\n\t\tconst data: string[] = [];\n\t\tconst ev: StreamEvent = {\n\t\t\teventType: '',\n\t\t\tparams: new Map(),\n\t\t\tdata: '',\n\t\t};\n\n\t\twhile (true) {\n\t\t\tconst line = await this.readLine();\n\n\t\t\tif (line == null) {\n\t\t\t\treturn null;\n\n\t\t\t} else if (line.startsWith(':')) {\n\t\t\t\tcontinue;\n\n\t\t\t} else if (line.startsWith('event: ')) {\n\t\t\t\tev.eventType = this.removePrefix(line, 'event: ');\n\n\t\t\t} else if (line.startsWith('data: ')) {\n\t\t\t\tdata.push(this.removePrefix(line, 'data: '));\n\n\t\t\t} else if (line.includes(': ')) {\n\t\t\t\tconst [k, v] = line.split(': ', 2);\n\t\t\t\tev.params.set(k!, v!);\n\n\t\t\t} else if (line == '') {\n\t\t\t\tev.data = data.join('\\n');\n\t\t\t\treturn ev;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async readLine(): Promise<string | null> {\n\t\twhile (true) {\n\t\t\tconst lineEnd = this.buf.indexOf('\\n');\n\n\t\t\tif (lineEnd == -1) {\n\t\t\t\tlet chunk: ReadableStreamReadResult<any>;\n\n\t\t\t\ttry {\n\t\t\t\t\tchunk = await this.reader.read();\n\t\t\t\t} catch {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (chunk.done) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tthis.buf += chunk.value;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst line = this.buf.substring(0, lineEnd);\n\t\t\tthis.buf = this.buf.substring(lineEnd + 1);\n\n\t\t\treturn line;\n\t\t}\n\t}\n\n\tprivate removePrefix(s: string, prefix: string): string {\n\t\treturn s.substring(prefix.length);\n\t}\n}\n\nexport class GetStream<T extends MetadataResponse> extends StreamCore {\n\tprivate prev: T | null;\n\n\tconstructor(resp: Response, controller: AbortController, prev: T | null | undefined) {\n\t\tsuper(resp, controller);\n\n\t\tthis.prev = prev ?? null;\n\t}\n\n\tasync read(): Promise<T | null> {\n\t\twhile (true) {\n\t\t\tconst ev = await this.readEvent();\n\n\t\t\tif (ev == null) {\n\t\t\t\treturn null;\n\n\t\t\t} else if (ev.eventType == 'initial' || ev.eventType == 'update') {\n\t\t\t\treturn JSON.parse(ev.data);\n\n\t\t\t} else if (ev.eventType == 'notModified') {\n\t\t\t\tif (this.prev == null) {\n\t\t\t\t\tthrow new Error({\n\t\t\t\t\t\tmessages: [\n\t\t\t\t\t\t\t'notModified without previous',\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst prev = this.prev;\n\t\t\t\tthis.prev = null;\n\n\t\t\t\treturn prev;\n\n\t\t\t} else if (ev.eventType == 'heartbeat') {\n\t\t\t\tcontinue;\n\n\t\t\t}\n\t\t}\n\t}\n\n\tasync close() {\n\t\tthis.abort();\n\n\t\tfor await (const _ of this) {}\n\t}\n\n\tasync *[Symbol.asyncIterator](): AsyncIterableIterator<T> {\n\t\twhile (true) {\n\t\t\tconst obj = await this.read();\n\n\t\t\tif (obj == null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tyield obj;\n\t\t}\n\t}\n}\n\nexport abstract class ListStream<T extends MetadataResponse> extends StreamCore {\n\tconstructor(resp: Response, controller: AbortController) {\n\t\tsuper(resp, controller);\n\t}\n\n\tasync close() {\n\t\tthis.abort();\n\n\t\tfor await (const _ of this) {}\n\t}\n\n\tabstract read(): Promise<T[] | null>;\n\n\tasync *[Symbol.asyncIterator](): AsyncIterableIterator<T[]> {\n\t\twhile (true) {\n\t\t\tconst list = await this.read();\n\n\t\t\tif (list == null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tyield list;\n\t\t}\n\t}\n}\n\nexport class ListStreamFull<T extends MetadataResponse> extends ListStream<T> {\n\tprivate prev: T[] | null;\n\n\tconstructor(resp: Response, controller: AbortController, prev: T[] | null | undefined) {\n\t\tsuper(resp, controller);\n\t\tthis.prev = prev ?? null;\n\t}\n\n\tasync read(): Promise<T[] | null> {\n\t\twhile (true) {\n\t\t\tconst ev = await this.readEvent();\n\n\t\t\tif (ev == null) {\n\t\t\t\treturn null;\n\n\t\t\t} else if (ev.eventType == 'list') {\n\t\t\t\treturn JSON.parse(ev.data);\n\n\t\t\t} else if (ev.eventType == 'notModified') {\n\t\t\t\tif (this.prev == null) {\n\t\t\t\t\tthrow new Error({\n\t\t\t\t\t\tmessages: [\n\t\t\t\t\t\t\t'notModified without previous',\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst prev = this.prev;\n\t\t\t\tthis.prev = null;\n\n\t\t\t\treturn prev;\n\n\t\t\t} else if (ev.eventType == 'heartbeat') {\n\t\t\t\tcontinue;\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class ListStreamDiff<T extends MetadataResponse> extends ListStream<T> {\n\tprivate prev: T[] | null;\n\tprivate objs: T[] = [];\n\n\tconstructor(resp: Response, controller: AbortController, prev: T[] | null | undefined) {\n\t\tsuper(resp, controller);\n\t\tthis.prev = prev ?? null;\n\t}\n\n\tasync read(): Promise<T[] | null> {\n\t\twhile (true) {\n\t\t\tconst ev = await this.readEvent();\n\n\t\t\tif (ev == null) {\n\t\t\t\treturn null;\n\n\t\t\t} else if (ev.eventType == 'add') {\n\t\t\t\tconst obj = JSON.parse(ev.data) as T;\n\t\t\t\tthis.objs.splice(parseInt(ev.params.get('new-position')!, 10), 0, obj);\n\n\t\t\t} else if (ev.eventType == 'update') {\n\t\t\t\tthis.objs.splice(parseInt(ev.params.get('old-position')!, 10), 1);\n\n\t\t\t\tconst obj = JSON.parse(ev.data) as T;\n\t\t\t\tthis.objs.splice(parseInt(ev.params.get('new-position')!, 10), 0, obj);\n\n\t\t\t} else if (ev.eventType == 'remove') {\n\t\t\t\tthis.objs.splice(parseInt(ev.params.get('old-position')!, 10), 1);\n\n\t\t\t} else if (ev.eventType == 'sync') {\n\t\t\t\treturn this.objs;\n\n\t\t\t} else if (ev.eventType == 'notModified') {\n\t\t\t\tif (!this.prev) {\n\t\t\t\t\tthrow new Error({\n\t\t\t\t\t\tmessages: [\n\t\t\t\t\t\t\t\"notModified without prev\",\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.objs = this.prev;\n\t\t\t\treturn this.objs;\n\n\t\t\t} else if (ev.eventType == 'heartbeat') {\n\t\t\t\tcontinue;\n\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ClientCore {\n\tprotected baseURL: URL;\n\tprotected headers: Headers = new Headers();\n\n\tconstructor(baseURL: string) {\n\t\tthis.baseURL = new URL(baseURL, globalThis?.location?.href);\n\t}\n\n\tasync debugInfo(): Promise<DebugInfo> {\n\t\treturn this.fetch('GET', '_debug');\n\t}\n\n\t//// Generic\n\n\tasync createName<TOut extends MetadataResponse, TIn>(name: string, obj: TIn): Promise<TOut> {\n\t\treturn this.fetch(\n\t\t\t'POST',\n\t\t\tencodeURIComponent(name),\n\t\t\t{\n\t\t\t\tbody: obj,\n\t\t\t},\n\t\t);\n\t}\n\n\tasync deleteName<TOut extends MetadataResponse>(name: string, id: string, opts?: UpdateOpts<TOut> | null): Promise<void> {\n\t\treturn this.fetch(\n\t\t\t'DELETE',\n\t\t\t`${encodeURIComponent(name)}/${encodeURIComponent(id)}`,\n\t\t\t{\n\t\t\t\theaders: this.buildUpdateHeaders(opts),\n\t\t\t},\n\t\t);\n\t}\n\n\tasync findName<TOut extends MetadataResponse>(name: string, shortID: string): Promise<TOut> {\n\t\tconst opts: ListOpts<TOut> = {\n\t\t\tfilters: [\n\t\t\t\t{\n\t\t\t\t\tpath: 'id',\n\t\t\t\t\top: 'hp',\n\t\t\t\t\tvalue: shortID,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\tconst list = await this.listName<TOut>(name, opts);\n\n\t\tif (list.length != 1) {\n\t\t\tthrow new Error({\n\t\t\t\tmessages: [\n\t\t\t\t\t'not found',\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\treturn list[0]!;\n\t}\n\n\tasync getName<TOut extends MetadataResponse>(name: string, id: string, opts?: GetOpts<TOut> | null): Promise<TOut> {\n\t\treturn this.fetch(\n\t\t\t'GET',\n\t\t\t`${encodeURIComponent(name)}/${encodeURIComponent(id)}`,\n\t\t\t{\n\t\t\t\theaders: this.buildGetHeaders(opts),\n\t\t\t\tprev: opts?.prev,\n\t\t\t},\n\t\t);\n\t}\n\n\tasync listName<TOut extends MetadataResponse>(name: string, opts?: ListOpts<TOut> | null): Promise<TOut[]> {\n\t\treturn this.fetch(\n\t\t\t'GET',\n\t\t\t`${encodeURIComponent(name)}`,\n\t\t\t{\n\t\t\t\tparams: this.buildListParams(opts),\n\t\t\t\theaders: this.buildListHeaders(opts),\n\t\t\t\tprev: opts?.prev,\n\t\t\t},\n\t\t);\n\t}\n\n\tasync replaceName<TOut extends MetadataResponse, TIn>(name: string, id: string, obj: TIn, opts?: UpdateOpts<TOut> | null): Promise<TOut> {\n\t\treturn this.fetch(\n\t\t\t'PUT',\n\t\t\t`${encodeURIComponent(name)}/${encodeURIComponent(id)}`,\n\t\t\t{\n\t\t\t\theaders: this.buildUpdateHeaders(opts),\n\t\t\t\tbody: obj,\n\t\t\t},\n\t\t);\n\t}\n\n\tasync updateName<TOut extends MetadataResponse, TIn>(name: string, id: string, obj: TIn, opts?: UpdateOpts<TOut> | null): Promise<TOut> {\n\t\treturn this.fetch(\n\t\t\t'PATCH',\n\t\t\t`${encodeURIComponent(name)}/${encodeURIComponent(id)}`,\n\t\t\t{\n\t\t\t\theaders: this.buildUpdateHeaders(opts),\n\t\t\t\tbody: obj,\n\t\t\t},\n\t\t);\n\t}\n\n\tasync streamGetName<TOut extends MetadataResponse>(name: string, id: string, opts?: GetOpts<TOut> | null): Promise<GetStream<TOut>> {\n\t\tconst controller = new AbortController();\n\n\t\tconst resp = await this.fetch(\n\t\t\t'GET',\n\t\t\t`${encodeURIComponent(name)}/${encodeURIComponent(id)}`,\n\t\t\t{\n\t\t\t\theaders: this.buildGetHeaders(opts),\n\t\t\t\tstream: true,\n\t\t\t\tsignal: controller.signal,\n\t\t\t},\n\t\t);\n\n\t\treturn new GetStream<TOut>(resp, controller, opts?.prev);\n\t}\n\n\tasync streamListName<TOut extends MetadataResponse>(name: string, opts?: ListOpts<TOut> | null): Promise<ListStream<TOut>> {\n\t\tconst controller = new AbortController();\n\n\t\tconst resp = await this.fetch(\n\t\t\t'GET',\n\t\t\t`${encodeURIComponent(name)}`,\n\t\t\t{\n\t\t\t\tparams: this.buildListParams(opts),\n\t\t\t\theaders: this.buildListHeaders(opts),\n\t\t\t\tstream: true,\n\t\t\t\tsignal: controller.signal,\n\t\t\t},\n\t\t);\n\n\t\ttry {\n\t\t\tswitch (resp.headers.get('Stream-Format')) {\n\t\t\tcase 'full':\n\t\t\t\treturn new ListStreamFull<TOut>(resp, controller, opts?.prev);\n\n\t\t\tcase 'diff':\n\t\t\t\treturn new ListStreamDiff<TOut>(resp, controller, opts?.prev);\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error({\n\t\t\t\t\tmessages: [\n\t\t\t\t\t\t`invalid Stream-Format: ${resp.headers.get('Stream-Format')}`,\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tcontroller.abort();\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprivate buildListParams<T extends MetadataResponse>(opts: ListOpts<T> | null | undefined): URLSearchParams {\n\t\tconst params = new URLSearchParams();\n\n\t\tif (!opts) {\n\t\t\treturn params;\n\t\t}\n\n\t\tif (opts.stream) {\n\t\t\tparams.set('_stream', opts.stream);\n\t\t}\n\n\t\tif (opts.limit) {\n\t\t\tparams.set('_limit', `${opts.limit}`);\n\t\t}\n\n\t\tif (opts.offset) {\n\t\t\tparams.set('_offset', `${opts.offset}`);\n\t\t}\n\n\t\tif (opts.after) {\n\t\t\tparams.set('_after', `${opts.after}`);\n\t\t}\n\n\t\tfor (const filter of opts.filters || []) {\n\t\t\tparams.set(`${filter.path}[${filter.op}]`, filter.value);\n\t\t}\n\n\t\tfor (const sort of opts.sorts || []) {\n\t\t\tparams.append('_sort', sort);\n\t\t}\n\n\t\treturn params;\n\t}\n\n\tprivate buildListHeaders<T extends MetadataResponse>(opts: ListOpts<T> | null | undefined): Headers {\n\t\tconst headers = new Headers();\n\n\t\tthis.addETagHeader(headers, 'If-None-Match', opts?.prev);\n\n\t\treturn headers;\n\t}\n\n\tprivate buildGetHeaders<T extends MetadataResponse>(opts: GetOpts<T> | null | undefined): Headers {\n\t\tconst headers = new Headers();\n\n\t\tthis.addETagHeader(headers, 'If-None-Match', opts?.prev);\n\n\t\treturn headers;\n\t}\n\n\tprivate buildUpdateHeaders<T extends MetadataResponse>(opts: UpdateOpts<T> | null | undefined): Headers {\n\t\tconst headers = new Headers();\n\n\t\tthis.addETagHeader(headers, 'If-Match', opts?.prev);\n\n\t\treturn headers;\n\t}\n\n\tprivate addETagHeader(headers: Headers, name: string, obj: any | undefined) {\n\t\tif (!obj) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst etag = Object.getOwnPropertyDescriptor(obj, ETagKey)?.value;\n\n\t\tif (!etag) {\n\t\t\tthrow(new Error({\n\t\t\t\tmessages: [\n\t\t\t\t\t`missing ETagKey in ${obj}`,\n\t\t\t\t],\n\t\t\t}));\n\t\t}\n\n\t\theaders.set(name, etag);\n\t}\n\n\tprotected async fetch(method: string, path: string, opts?: FetchOptions): Promise<any> {\n\t\tconst url = new URL(path, this.baseURL);\n\n\t\tif (opts?.params) {\n\t\t\turl.search = `?${opts.params}`;\n\t\t}\n\n\t\t// TODO: Add timeout\n\t\t// TODO: Add retry strategy\n\t\t// TODO: Add Idempotency-Key support\n\n\t\tconst reqOpts: RequestInit = {\n\t\t\tmethod: method,\n\t\t\theaders: new Headers(this.headers),\n\t\t\tmode: 'cors',\n\t\t\tcredentials: 'omit',\n\t\t\treferrerPolicy: 'no-referrer',\n\t\t\tkeepalive: true,\n\t\t\tsignal: opts?.signal ?? null,\n\t\t}\n\n\t\tif (opts?.headers) {\n\t\t\tfor (const [k, v] of opts.headers) {\n\t\t\t\t(<Headers>reqOpts.headers).append(k, v);\n\t\t\t}\n\t\t}\n\n\t\tif (opts?.body) {\n\t\t\treqOpts.body = JSON.stringify(opts.body);\n\t\t\t(<Headers>reqOpts.headers).set('Content-Type', 'application/json');\n\t\t}\n\n\t\tif (opts?.stream) {\n\t\t\t(<Headers>reqOpts.headers).set('Accept', 'text/event-stream');\n\t\t}\n\n\t\tconst req = new Request(url, reqOpts);\n\n\t\tconst resp = await fetch(req);\n\n\t\tif (opts?.prev && resp.status == 304) {\n\t\t\treturn opts.prev;\n\t\t}\n\n\t\tif (!resp.ok) {\n\t\t\tthrow new Error(await resp.json());\n\t\t}\n\n\t\tif (resp.status == 200) {\n\t\t\tif (opts?.stream) {\n\t\t\t\treturn resp;\n\t\t\t}\n\n\t\t\tconst js = await resp.json();\n\n\t\t\tif (resp.headers.has('ETag')) {\n\t\t\t\tObject.defineProperty(js, ETagKey, {\n\t\t\t\t\tvalue: resp.headers.get('ETag'),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn js;\n\t\t}\n\t}\n}\n\nexport class Client extends ClientCore {\n\tconstructor(baseURL: string) {\n\t\tsuper(baseURL);\n\t}\n\n\tsetBasicAuth(user: string, pass: string) {\n\t\tconst enc = btoa(`${user}:${pass}`);\n\t\tthis.headers.set('Authorization', `Basic ${enc}`);\n\t}\n\n\tsetAuthToken(token: string) {\n\t\tthis.headers.set('Authorization', `Bearer ${token}`);\n\t}\n\n\t//// Task\n\n\tasync createTask(obj: TaskRequest): Promise<TaskResponse> {\n\t\treturn this.createName<TaskResponse, TaskRequest>('task', obj);\n\t}\n\n\tasync deleteTask(id: string, opts?: UpdateOpts<TaskResponse> | null): Promise<void> {\n\t\treturn this.deleteName('task', id, opts);\n\t}\n\n\tasync findTask(shortID: string): Promise<TaskResponse> {\n\t\treturn this.findName<TaskResponse>('task', shortID);\n\t}\n\n\tasync getTask(id: string, opts?: GetOpts<TaskResponse> | null): Promise<TaskResponse> {\n\t\treturn this.getName<TaskResponse>('task', id, opts);\n\t}\n\n\tasync listTask(opts?: ListOpts<TaskResponse> | null): Promise<TaskResponse[]> {\n\t\treturn this.listName<TaskResponse>('task', opts);\n\t}\n\n\tasync replaceTask(id: string, obj: TaskRequest, opts?: UpdateOpts<TaskResponse> | null): Promise<TaskResponse> {\n\t\treturn this.replaceName<TaskResponse, TaskRequest>('task', id, obj, opts);\n\t}\n\n\tasync updateTask(id: string, obj: TaskRequest, opts?: UpdateOpts<TaskResponse> | null): Promise<TaskResponse> {\n\t\treturn this.updateName<TaskResponse, TaskRequest>('task', id, obj, opts);\n\t}\n\n\tasync streamGetTask(id: string, opts?: GetOpts<TaskResponse> | null): Promise<GetStream<TaskResponse>> {\n\t\treturn this.streamGetName<TaskResponse>('task', id, opts);\n\t}\n\n\tasync streamListTask(opts?: ListOpts<TaskResponse> | null): Promise<ListStream<TaskResponse>> {\n\t\treturn this.streamListName<TaskResponse>('task', opts);\n\t}\n\n\t//// Token\n\n\tasync createToken(obj: TokenRequest): Promise<TokenResponse> {\n\t\treturn this.createName<TokenResponse, TokenRequest>('token', obj);\n\t}\n\n\tasync deleteToken(id: string, opts?: UpdateOpts<TokenResponse> | null): Promise<void> {\n\t\treturn this.deleteName('token', id, opts);\n\t}\n\n\tasync findToken(shortID: string): Promise<TokenResponse> {\n\t\treturn this.findName<TokenResponse>('token', shortID);\n\t}\n\n\tasync getToken(id: string, opts?: GetOpts<TokenResponse> | null): Promise<TokenResponse> {\n\t\treturn this.getName<TokenResponse>('token', id, opts);\n\t}\n\n\tasync listToken(opts?: ListOpts<TokenResponse> | null): Promise<TokenResponse[]> {\n\t\treturn this.listName<TokenResponse>('token', opts);\n\t}\n\n\tasync replaceToken(id: string, obj: TokenRequest, opts?: UpdateOpts<TokenResponse> | null): Promise<TokenResponse> {\n\t\treturn this.replaceName<TokenResponse, TokenRequest>('token', id, obj, opts);\n\t}\n\n\tasync updateToken(id: string, obj: TokenRequest, opts?: UpdateOpts<TokenResponse> | null): Promise<TokenResponse> {\n\t\treturn this.updateName<TokenResponse, TokenRequest>('token', id, obj, opts);\n\t}\n\n\tasync streamGetToken(id: string, opts?: GetOpts<TokenResponse> | null): Promise<GetStream<TokenResponse>> {\n\t\treturn this.streamGetName<TokenResponse>('token', id, opts);\n\t}\n\n\tasync streamListToken(opts?: ListOpts<TokenResponse> | null): Promise<ListStream<TokenResponse>> {\n\t\treturn this.streamListName<TokenResponse>('token', opts);\n\t}\n\n\t//// User\n\n\tasync createUser(obj: UserRequest): Promise<UserResponse> {\n\t\treturn this.createName<UserResponse, UserRequest>('user', obj);\n\t}\n\n\tasync deleteUser(id: string, opts?: UpdateOpts<UserResponse> | null): Promise<void> {\n\t\treturn this.deleteName('user', id, opts);\n\t}\n\n\tasync findUser(shortID: string): Promise<UserResponse> {\n\t\treturn this.findName<UserResponse>('user', shortID);\n\t}\n\n\tasync getUser(id: string, opts?: GetOpts<UserResponse> | null): Promise<UserResponse> {\n\t\treturn this.getName<UserResponse>('user', id, opts);\n\t}\n\n\tasync listUser(opts?: ListOpts<UserResponse> | null): Promise<UserResponse[]> {\n\t\treturn this.listName<UserResponse>('user', opts);\n\t}\n\n\tasync replaceUser(id: string, obj: UserRequest, opts?: UpdateOpts<UserResponse> | null): Promise<UserResponse> {\n\t\treturn this.replaceName<UserResponse, UserRequest>('user', id, obj, opts);\n\t}\n\n\tasync updateUser(id: string, obj: UserRequest, opts?: UpdateOpts<UserResponse> | null): Promise<UserResponse> {\n\t\treturn this.updateName<UserResponse, UserRequest>('user', id, obj, opts);\n\t}\n\n\tasync streamGetUser(id: string, opts?: GetOpts<UserResponse> | null): Promise<GetStream<UserResponse>> {\n\t\treturn this.streamGetName<UserResponse>('user', id, opts);\n\t}\n\n\tasync streamListUser(opts?: ListOpts<UserResponse> | null): Promise<ListStream<UserResponse>> {\n\t\treturn this.streamListName<UserResponse>('user', opts);\n\t}\n}\n\nexport class Error {\n\tmessages: string[];\n\n\tconstructor(json: JSONError) {\n\t\tthis.messages = json.messages;\n\t}\n\n\ttoString(): string {\n\t\treturn this.messages[0] ?? 'error';\n\t}\n}\n\n// vim: set filetype=typescript:\n"]}